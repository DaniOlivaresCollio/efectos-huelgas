data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(m06_lagged=lag(m06,n=1)) %>%  # Desplaza "m06" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(m06_full=ifelse(!is.na(m06),m06,m06_lagged)) %>%  # Si m06 es NA, sustituir con el valor de la ola anterior
select(-m06_lagged)
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
mutate(supervisa=case_when(m06_full==0~0,
m06_full>=1~1,
m06_full==-888~NA,
m06_full==-999~NA))
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$supervisa,data$ola,
show.col.prc=TRUE,
var.labels=c("Supervisa","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Supervisa, por ola")
# Creación de variable posición de clase
data <- mutate(data,
class=case_when(rel_empleo=="Trabaja solo, no tiene empleados"~"Self-employed",
cualificacion=="Experts"&supervisa==1~"Expert managers",
cualificacion=="Experts"&supervisa==0~"Experts",
cualificacion=="Skilled"&supervisa==1~"Skilled supervisors",
cualificacion=="Skilled"&supervisa==0~"Skilled workers",
cualificacion=="Unskilled"&supervisa==1~"Unskilled supervisors",
cualificacion=="Unskilled"&supervisa==0~"Workers"))
data$class <- factor(data$class,
levels=c("Self-employed",
"Expert managers",
"Experts",
"Skilled supervisors",
"Skilled workers",
"Unskilled supervisors",
"Workers"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de Clase, por ola")
# Creación de variable posición de clase
data <- mutate(data,
class_2=case_when(class=="Self-employed"~"Self-employed",
class=="Expert managers"~"Expert managers",
class=="Experts"~"Experts",
class=="Skilled supervisors"|class=="Unskilled supervisors"~"Supervisors",
class=="Skilled workers"|class=="Workers"~"Workers"))
data$class_2 <- factor(data$class_2,
levels=c("Self-employed",
"Expert managers",
"Experts",
"Supervisors",
"Workers"))
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$class_2,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 2","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 2, por ola")
# Recodficar
data <- data %>%
mutate(temp_trabajo=car::recode(m08,
recodes=c("1='Permanente';
2='De temporada o estacional';
3='Ocasional o eventual';
4='A prueba';
5='Por plazo o tiempo determinado';
-888=NA;
-999=NA"),
as.factor=TRUE, # convertir a factor
levels=c("Permanente",
"De temporada o estacional",
"Ocasional o eventual",
"A prueba",
"Por plazo o tiempo determinado"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$temp_trabajo,data$ola,
show.col.prc=TRUE,
var.labels=c("Temporalidad","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Temporalidad del trabajo, por ola")
# Crear una columna con la variable "m08" adelantada una ola
data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(m08_lagged=lag(m08,n=1)) %>%  # Desplaza "isic4" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(m08_full=ifelse(!is.na(m08),m08,m08_lagged)) %>%  # Si isic4 es NA, sustituir con el valor de la ola anterior
select(-m08_lagged)
# Recodficar
data <- data %>%
mutate(temp_trabajo=car::recode(m08_full,
recodes=c("1='Permanente';
2='De temporada o estacional';
3='Ocasional o eventual';
4='A prueba';
5='Por plazo o tiempo determinado';
-888=NA;
-999=NA"),
as.factor=TRUE, # convertir a factor
levels=c("Permanente",
"De temporada o estacional",
"Ocasional o eventual",
"A prueba",
"Por plazo o tiempo determinado"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$temp_trabajo,data$ola,
show.col.prc=TRUE,
var.labels=c("Temporalidad","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Temporalidad del trabajo, por ola")
# Crear variable binaria: open-ended
data <- mutate(data,
open_ended=if_else(temp_trabajo=="Permanente",1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$open_ended,data$ola,
show.col.prc=TRUE,
var.labels=c("Open-ended","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as Permanentes, por ola")
# Recodficar
data <- data %>%
mutate(tipo_contrato=car::recode(m10,
recodes=c("1='Sí, lo firmé';
2='Sí, pero no lo he firmado';
3='No tengo';
-888=NA;
-999=NA"),
as.factor=TRUE, # convertir a factor
levels=c("Sí, lo firmé",
"Sí, pero no lo he firmado",
"No tengo"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$tipo_contrato,data$ola,
show.col.prc=TRUE,
var.labels=c("Tipo de contrato","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes del Tipo de Contrato, por ola")
# Crear una columna con la variable "m10" adelantada una ola
data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(m10_lagged=lag(m10,n=1)) %>%  # Desplaza m10 a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(m10_full=ifelse(!is.na(m10),m10,m10_lagged)) %>%  # Si m10 es NA, sustituir con el valor de la ola anterior
select(-m10_lagged)
# Recodficar
data <- data %>%
mutate(tipo_contrato=car::recode(m10_full,
recodes=c("1='Sí, lo firmé';
2='Sí, pero no lo he firmado';
3='No tengo';
-888=NA;
-999=NA"),
as.factor=TRUE, # convertir a factor
levels=c("Sí, lo firmé",
"Sí, pero no lo he firmado",
"No tengo"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$tipo_contrato,data$ola,
show.col.prc=TRUE,
var.labels=c("Tipo de contrato","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes del Tipo de Contrato, por ola")
# Crear variable binaria: contrato
data <- mutate(data,
contrato=if_else(m10_full==1|m10_full==2,1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$contrato,data$ola,
show.col.prc=TRUE,
var.labels=c("Tiene contrato","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as con contrato, por ola")
# Crear variable binaria: female
data <- mutate(data,
female=if_else(sexo==2,1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$female,data$ola,
show.col.prc=TRUE,
var.labels=c("Female","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadoras, por ola")
# Recodficar
data <- data %>%
mutate(mem_sindicato=car::recode(c12_04,
recodes=c("1='No es miembro';
2='Miembro inactivo';
3='Miembro activo';
-888=NA;
-999=NA"),
as.factor=TRUE, # convertir a factor
levels=c("No es miembro",
"Miembro inactivo",
"Miembro activo"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$mem_sindicato,data$ola,
show.col.prc=TRUE,
var.labels=c("Membresía sindical","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as miembros/as de sindicatos, por ola")
# Crear una columna con la variable "c12_04" adelantada una ola
data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(c12_04_lagged=lag(c12_04,n=1)) %>%  # Desplaza c12_04 a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(c12_04_full=ifelse(!is.na(c12_04),c12_04,c12_04_lagged)) %>%  # Si c12_04 es NA, sustituir con el valor de la ola anterior
select(-c12_04_lagged)
# Recodficar
data <- data %>%
mutate(mem_sindicato=car::recode(c12_04_full,
recodes=c("1='No es miembro';
2='Miembro inactivo';
3='Miembro activo';
-888=NA;
-999=NA"),
as.factor=TRUE, # convertir a factor
levels=c("No es miembro",
"Miembro inactivo",
"Miembro activo"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$mem_sindicato,data$ola,
show.col.prc=TRUE,
var.labels=c("Membresía sindical","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as miembros/as de sindicatos, por ola")
# Crear variable binaria: unionized
data <- mutate(data,
unionized=if_else(c12_04_full==2|c12_04_full==3,1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$unionized,data$ola,
show.col.prc=TRUE,
var.labels=c("Unionized","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as Sindicalizados/as, por ola")
# Recodficar
data <- data %>%
mutate(part_huelga=car::recode(c08_03,
recodes=c("1='Nunca';
2='Casi nunca';
3='A veces';
4='Frecuentemente';
5='Muy Frecuentemente';
-888=NA;
-999=NA"),
as.factor=TRUE, # convertir a factor
levels=c("Nunca",
"Casi nunca",
"A veces",
"Frecuentemente",
"Muy Frecuentemente"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$part_huelga,data$ola,
show.col.prc=TRUE,
var.labels=c("Participa en huelgas","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as que han participado en huelgas, por ola")
# Recodficar
data <- data %>%
mutate(int_politica=car::recode(c13,
recodes=c("1='Nada interesado';
2='Poco interesado';
3='Algo interesado';
4='Bastante interesado';
5='Muy interesado';
-888=NA;
-999=NA"),
as.factor=TRUE, # convertir a factor
levels=c("Nada interesado",
"Poco interesado",
"Algo interesado",
"Bastante interesado",
"Muy interesado"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$int_politica,data$ola,
show.col.prc=TRUE,
var.labels=c("Interés en la política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as interesados en la política, por ola")
# Crear variable binaria: valora_lab
data <- mutate(data,
valora_lab=if_else(c20==2,1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$valora_lab,data$ola,
show.col.prc=TRUE,
var.labels=c("Valora Lab","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as que valoran el Movimiento de Demandas Laborales, por ola")
# Recodificar
data <- data %>%
mutate(compromiso_mov=car::recode(c21_01,
recodes=c("1='Totalmente en desacuerdo';
2='En desacuerdo';
3='Ni en desacuerdo ni de acuerdo';
4='De acuerdo';
5='Totalmente de acuerdo';
-888=NA;
-999=NA"),
as.factor = TRUE, # convertir a factor
levels = c("Totalmente en desacuerdo",
"En desacuerdo",
"Ni en desacuerdo ni de acuerdo",
"De acuerdo",
"Totalmente de acuerdo"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
data_ml <- data %>%
filter(valora_lab==1)
sjt.xtab(data_ml$compromiso_mov,data_ml$ola,
show.col.prc = TRUE,
var.labels = c("Compromiso con el movimiento DL","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes del Nivel de Compromiso con el Movimiento de Demandas Laborales, por ola")
# Crear variable binaria: open-ended
data <- mutate(data,
compromiso_mlab=case_when(valora_lab==0~0,
valora_lab==1&c21_01==1~1,
valora_lab==1&c21_01==2~2,
valora_lab==1&c21_01==3~3,
valora_lab==1&c21_01==4~4,
valora_lab==1&c21_01==5~5))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$compromiso_mlab,data$ola,
show.col.prc=TRUE,
var.labels=c("Compromiso Mov Lab","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as permanentes, por ola")
# Recodificar
data <- data %>%
mutate(identifico_mov=car::recode(c21_02,
recodes=c("1='Totalmente en desacuerdo';
2='En desacuerdo';
3='Ni en desacuerdo ni de acuerdo';
4='De acuerdo';
5='Totalmente de acuerdo';
-888=NA;
-999=NA"),
as.factor = TRUE, # convertir a factor
levels = c("Totalmente en desacuerdo",
"En desacuerdo",
"Ni en desacuerdo ni de acuerdo",
"De acuerdo",
"Totalmente de acuerdo"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
data_ml <- data %>%
filter(valora_lab==1)
sjt.xtab(data_ml$identifico_mov,data_ml$ola,
show.col.prc=TRUE,
var.labels=c("Compromiso con el movimiento DL","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes del Nivel de Compromiso con el Movimiento de Demandas Laborales, por ola")
# Recodificar
data <- data %>%
mutate(identifico_mov=car::recode(c21_02,
recodes=c("1='Totalmente en desacuerdo';
2='En desacuerdo';
3='Ni en desacuerdo ni de acuerdo';
4='De acuerdo';
5='Totalmente de acuerdo';
-888=NA;
-999=NA"),
as.factor = TRUE, # convertir a factor
levels = c("Totalmente en desacuerdo",
"En desacuerdo",
"Ni en desacuerdo ni de acuerdo",
"De acuerdo",
"Totalmente de acuerdo"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
data_ml <- data %>%
filter(valora_lab==1)
sjt.xtab(data_ml$identifico_mov,data_ml$ola,
show.col.prc=TRUE,
var.labels=c("Compromiso con el movimiento DL","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes del Nivel de Identifico con el Movimiento de Demandas Laborales, por ola")
# Crear variable binaria: open-ended
data <- mutate(data,
identifico_mlab=case_when(valora_lab==0~0,
valora_lab==1&c21_02==1~1,
valora_lab==1&c21_02==2~2,
valora_lab==1&c21_02==3~3,
valora_lab==1&c21_02==4~4,
valora_lab==1&c21_02==5~5))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$identifico_mlab,data$ola,
show.col.prc=TRUE,
var.labels=c("Identifico Mov Lab","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as permanentes, por ola")
save(data,file=(here::here("output/elsoc-huelgas.Rdata")))
saveRDS(data,file=(here::here("output/elsoc-huelgas.rds")))
data_sa <- data %>%
filter(tipo_atricion==1)
n_sa <- nrow(data_sa)
# # Recodficar
# data_sa$actividad <- car::recode(data_sa$m02,
#                                  recodes=c("1='Trabaja de manera remunerada con jornada completa';
#                                             2='Trabaja de manera remunerada a tiempo parcial';
#                                             3='Estudia y trabaja';
#                                             4='Solo estudia';
#                                             5='Jubilado o pensionado';
#                                             6='Desempleado, buscando trabajo';
#                                             7='Realiza tareas no remuneradas';
#                                             8='Esta enfermo o tiene una discapacidad';
#                                             9='No estudia, no trabaja y no busca trabajo';
#                                             -888=NA;
#                                             -999=NA"),
#                                  as.factor=TRUE,
#                                  levels=c("Trabaja de manera remunerada con jornada completa",
#                                           "Trabaja de manera remunerada a tiempo parcial",
#                                           "Estudia y trabaja",
#                                           "Solo estudia",
#                                           "Jubilado o pensionado",
#                                           "Desempleado, buscando trabajo",
#                                           "Realiza tareas no remuneradas",
#                                           "Esta enfermo o tiene una discapacidad",
# "No estudia, no trabaja y no busca trabajo"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data_sa$actividad,data_sa$ola,
show.col.prc=TRUE,
var.labels=c("Actividad","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Actividad principal, por ola, S/A")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$actividad,data$ola,
show.col.prc=TRUE,
var.labels=c("Actividad","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Actividad principal, por ola, S/A")
rm(list=ls())
library(pacman)
p_load(tidyverse,
knitr,
bookdown,
car,
sjmisc,
sjPlot,
sjlabelled,
psych,
kableExtra,
gridExtra,
lubridate,
viridis,
statar,
readxl,
tinytex,
ggrepel,
ggalluvial,
survey,
httr,
# devtools,
readr,
ggplot2,
labelled)
# devtools::install_github("DiogoFerrari/occupar",dependencies=F)
load(here::here("input/data/ELSOC_Long.RData"))
# Seleccion de variables
data <- elsoc_long_2016_2022 %>%
select(idencuesta,                                     # identificacion enctdo
ola,ola_w01,ola_w02,ola_w03,                    # identificacion ola
ola_w04,ola_w05,ola_w06,                        # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
sexo=m0_sexo,edad=m0_edad,educ=m01,             # caract sociodem
m02,m06,m07,m08,m10,                            # caract sociodem
m03,ciuo88_m03,ciuo08_m03,                      # caract ocupacional
m04,ciiu3_m04,ciiu4_m04,                        # caract ocupacional
c12_04,                                         # membresia sindicato
c08_03,                                         # freq participa hlgs
c20,c20_otro,                                   # mov que mas valora
c21_01,c21_02,c21_03,c21_04,c21_05,c21_06,      # caract mov valora
c21_07,c21_08,c21_09,c21_10,c21_11,c22,c23,c24, # caract mov valora
c13,c14_01,c14_02                               # interes politica
)
## Informacion diseno del estudio
# data_svy <- svydesign(ids = ~segmento_disenno,weights = ~ponderador02,
#                       data = ell,nest = TRUE,strata = ~estrato_disenno)
table(data$ola)
class(data$ola)
# Recodficar
data <- data %>%
mutate(year=car::recode(ola,
recodes=c("1='2016';
2='2017';
3='2018';
4='2019';
5='2021';
6='2022';
-888=NA;
-999=NA"),
as.factor=TRUE, # convertir a factor
levels=c("2016",
"2017",
"2018",
"2019",
"2021",
"2022"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$year,data$ola,
show.col.prc=TRUE,
var.labels=c("Año","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as miembros/as de sindicatos, por ola")
