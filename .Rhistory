mutate(rel_empleo=car::recode(m07,
recodes=c("1='Empleado u obrero en empresa privada';
2='Empleado u obrero del sector público';
3='Miembro de las Fuerzas Armadas y de Orden';
4='Patrón/a o empleador/a';
5='Trabaja solo, no tiene empleados';
6='Familiar no remunerado';
7='Servicio doméstico';
-888=NA;
-999=NA"),
as.factor=TRUE, # convertir a factor
levels=c("Empleado u obrero en empresa privada",
"Empleado u obrero del sector público",
"Miembro de las Fuerzas Armadas y de Orden",
"Patrón/a o empleador/a",
"Trabaja solo, no tiene empleados",
"Familiar no remunerado",
"Servicio doméstico"))) # ordenar niveles
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$rel_empleo, data$ola,
show.col.prc = TRUE,
var.labels = c("Relación de empleo","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de la Relación de empleo, por ola")
# Crear una columna con la variable "rel_empleo" adelantada una ola
data <- data %>%
# arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(rel_empleo_lagged=lag(as.character(rel_empleo),n=1)) %>%  # Desplaza "rel_empleo" a la siguiente ola,
# conviertiendo el factor en character temporalmente
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(rel_empleo=ifelse(is.na(rel_empleo),rel_empleo_lagged,as.character(rel_empleo))) %>%  # Si rel empleo es NA, sustituir con el valor de la ola anterior y asegurarse que actividad esté en formato carácter
mutate(rel_empleo=factor(rel_empleo)) %>%  # Convertir de nuevo a factor
select(-rel_empleo_lagged)                 # Elimina la columna temporal
# Tabla de frecuencias y porcentajes
sjt.xtab(data$rel_empleo, data$ola,
show.col.prc = TRUE,
var.labels = c("Relación de empleo","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de la Relación de empleo, por ola")
# Filtrar para trabajadores y self-employed
data <- filter(data, rel_empleo %in% c("Empleado u obrero en empresa privada",
"Empleado u obrero del sector público",
"Trabaja solo, no tiene empleados",
"Familiar no remunerado",
"Servicio doméstico"))
n <- nrow(data)
# Carga bbdd con comparacion 88 y 08
isco08_88 <- read_excel(here::here("input/isco08-88.xls"))
isco08_88 <- isco08_88 %>%
rename(isco08=`ISCO 08 Code`,isco88=`ISCO-88 code`)
# Exploración
valores_repetidos <- table(isco08_88$isco88) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]
valores_repetidos <- table(isco08_88$isco08) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]
# CIUO - ISCO: Recodificación 88->08 4 digitos en datos elsoc
indices <- match(data$ciuo88_m03,isco08_88$isco88)
data$ciuo08_rec <- isco08_88$isco08[indices]
data$ciuo08_rec <- as.numeric(data$ciuo08_rec) # es solo la recodificación de las que eran 88 en data, es decir, año 2016
# Creación variable isco08 con ciuo08_m03 y ciuo08_rec (ex ciuo88_m03) 4 digitos
data$isco08 <- ifelse(!is.na(data$ciuo08_rec),data$ciuo08_rec,data$ciuo08_m03) # es la unión en una variable de todo en 08
# Crear una columna con la variable "isco08" adelantada una ola
data <- data %>%
# arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(isco08_lagged=lag(isco08,n=1)) %>%  # Desplaza "isco08" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(isco08=ifelse(is.na(isco08),isco08_lagged,isco08)) %>%  # Si isco08 es NA, sustituir con el valor de la ola anterior
select(-isco08_lagged)                 # Elimina la columna temporal
# CIUO - ISCO: creación de variables con 1 dígito
data$isco08_1d <- as.character(data$isco08)
data$isco08_1d <- substr(data$isco08_1d,1,1)
data$isco08_1d <- as.numeric(data$isco08_1d)
# CIUO - ISCO: creación de variables con 2 dígitos
data$isco08_2d <- as.character(data$isco08)
data$isco08_2d <- substr(data$isco08_2d,1,2)
data$isco08_2d <- as.numeric(data$isco08_2d)
# Tabla de frecuencias y porcentajes 1 dígito
sjt.xtab(data$isco08_1d, data$ola,
show.col.prc = TRUE,
var.labels = c("CIUO08","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de Ocupación con 1 dígito, por ola")
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$isco08_2d, data$ola,
show.col.prc = TRUE,
var.labels = c("CIUO08","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de Ocupación con 2 dígitos, por ola")
# Creación variable Nivel de cualificación
data <- mutate(data,
cualificacion = case_when(isco08_2d <= 34 & educ >= 9 ~ "Experts",
isco08_2d <= 34 & educ < 9 ~ "Skilled",
isco08_2d == 35 ~ "Skilled",
isco08_2d >= 41 & isco08_2d <= 44 ~ "Skilled",
isco08_2d == 53 ~ "Skilled",
isco08_2d == 51 & educ <= 5 ~ "Unskilled",
isco08_2d == 51 & educ > 5 ~ "Skilled",
isco08_2d == 54 & educ <= 5 ~ "Unskilled",
isco08_2d == 54 & educ > 5 ~ "Skilled",
isco08_2d == 61 & educ <= 5 ~ "Unskilled",
isco08_2d == 61 & educ > 5 ~ "Skilled",
isco08_2d == 62 & educ <= 5 ~ "Unskilled",
isco08_2d == 62 & educ > 5 ~ "Skilled",
isco08_2d == 71 & educ <= 5 ~ "Unskilled",
isco08_2d == 71 & educ > 5 ~ "Skilled",
isco08_2d == 72 & educ <= 5 ~ "Unskilled",
isco08_2d == 72 & educ > 5 ~ "Skilled",
isco08_2d == 73 & educ <= 5 ~ "Unskilled",
isco08_2d == 73 & educ > 5 ~ "Skilled",
isco08_2d == 74 & educ <= 5 ~ "Unskilled",
isco08_2d == 74 & educ > 5 ~ "Skilled",
isco08_2d == 75 & educ <= 5 ~ "Unskilled",
isco08_2d == 75 & educ > 5 ~ "Skilled",
isco08_2d == 81 & educ <= 5 ~ "Unskilled",
isco08_2d == 81 & educ > 5 ~ "Skilled",
isco08_2d == 52 ~ "Unskilled",
isco08_2d == 61 ~ "Unskilled",
isco08_2d == 63 ~ "Unskilled",
isco08_2d == 75 ~ "Unskilled",
isco08_2d == 82 ~ "Unskilled",
isco08_2d == 83 ~ "Unskilled",
isco08_2d == 90 ~ "Unskilled"))
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$cualificacion, data$ola,
show.col.prc = TRUE,
var.labels = c("Nivel de cualificación","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes del Nivel de Cualificación, por ola")
# Recodificar variable CIIU 3 para que queden de 4 dígitos
data$ciiu3 <- sprintf("%04d",data$ciiu3_m04)
# Recodificar variable CIIU 4 para que queden de 4 dígitos
data$ciiu4 <- sprintf("%04d",data$ciiu4_m04)
# Creación de variable CIIU 4 con CIIU 3
## Carga bbdd con comparacion 31 y 4
isic4_isic31 <- read_csv(here::here("input/ISIC4_ISIC31.txt"))
## Recodificación CIIU 3 -> CIIU 4
indices <- match(data$ciiu3,isic4_isic31$ISIC31code)
data$ciiu4_rec <- isic4_isic31$ISIC4code[indices]
# Creación variable isic4 con ciiu4 y ciiu4_rec (ex ciiu3) 4 digitos
data$isic4 <- ifelse(!is.na(data$ciiu4_rec),data$ciiu4_rec,data$ciiu4) # es la unión en una variable de todo en ciiu4
# Crear una columna con la variable "isic4" adelantada una ola
data <- data %>%
# arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(isic4_lagged=lag(isic4,n=1)) %>%  # Desplaza "isic4" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(isic4=ifelse(is.na(isic4),isic4_lagged,isic4)) %>%  # Si isic4 es NA, sustituir con el valor de la ola anterior
select(-isic4_lagged)                 # Elimina la columna temporal
# CIIU 4: creación de variable con 2 dígitos
data$isic4_2d <- substr(data$isic4,1,2)
data$isic4_2d <- as.numeric(data$isic4_2d)
# Creación de variable con letra
data <- mutate(data,
rama = case_when(isic4_2d <= 03 ~ "A",
isic4_2d >= 05 & isic4_2d <= 09 ~ "B",
isic4_2d >= 10 & isic4_2d <= 33 ~ "C",
isic4_2d == 35 ~ "D",
isic4_2d >= 36 & isic4_2d <= 39 ~ "E",
isic4_2d >= 41 & isic4_2d <= 43 ~ "F",
isic4_2d >= 45 & isic4_2d <= 47 ~ "G",
isic4_2d >= 49 & isic4_2d <= 53 ~ "H",
isic4_2d >= 55 & isic4_2d <= 56 ~ "I",
isic4_2d >= 58 & isic4_2d <= 63 ~ "J",
isic4_2d >= 64 & isic4_2d <= 66 ~ "K",
isic4_2d == 68 ~ "L",
isic4_2d >= 69 & isic4_2d <= 75 ~ "M",
isic4_2d >= 77 & isic4_2d <= 82 ~ "N",
isic4_2d == 84 ~ "O",
isic4_2d == 85 ~ "P",
isic4_2d >= 86 & isic4_2d <= 88 ~ "Q",
isic4_2d >= 90 & isic4_2d <= 93 ~ "R",
isic4_2d >= 94 & isic4_2d <= 96 ~ "S",
isic4_2d >= 97 & isic4_2d <= 98 ~ "T",
isic4_2d == 99 ~ "U"))
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$rama, data$ola,
show.col.prc = TRUE,
var.labels = c("Rama de Actividad Económica","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de la Rama de Actividad Económica, por ola")
rm(list=ls())
load(here::here("input/data/ELSOC_Long.RData"))
# Seleccion de variables
data <- elsoc_long_2016_2022 %>%
select(idencuesta,                                      # identificacion encuestado
ola,ola_w01,ola_w02,ola_w03,                     # identificacion ola
ola_w04,ola_w05,ola_w06,                         # identificacion ola
version,muestra,tipo_atricion,estrato,           # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,   # identificacion srvy
sexo=m0_sexo,edad=m0_edad,educ=m01,              # caract sociodem
m02,m06,m07,m08,m10,                             # caract sociodem
m03,ciuo88_m03,ciuo08_m03,                       # caract ocupacional
m04,ciiu3_m04,ciiu4_m04,                         # caract ocupacional
c12_04,                                          # membresia sindicato
c08_03,                                          # freq participa hlgs
mov_valora=c20,mov_valora_otro=c20_otro,         # mov que mas valora
c21_01,c21_02,c21_03,c21_04,c21_05,c21_06,       # caract mov valora
c21_07,c21_08,c21_09,c21_10,c21_11,c22,c23,c24,  # caract mov valora
c13,c14_01,c14_02                                # interes politica
)
# informacion diseno del estudio
# data_svy <- svydesign(ids = ~segmento_disenno,weights = ~ponderador02,
#                       data = ell,nest = TRUE,strata = ~estrato_disenno)
n <- nrow(data)
# Recodficar
data$actividad <- car::recode(data$m02,
recodes=c("1='Trabaja de manera remunerada con jornada completa';
2='Trabaja de manera remunerada a tiempo parcial';
3='Estudia y trabaja';
4='Solo estudia';
5='Jubilado o pensionado';
6='Desempleado, buscando trabajo';
7='Realiza tareas no remuneradas';
8='Esta enfermo o tiene una discapacidad';
9='No estudia, no trabaja y no busca trabajo';
-888=NA;
-999=NA"),
as.factor=TRUE,
levels=c("Trabaja de manera remunerada con jornada completa",
"Trabaja de manera remunerada a tiempo parcial",
"Estudia y trabaja",
"Solo estudia",
"Jubilado o pensionado",
"Desempleado, buscando trabajo",
"Realiza tareas no remuneradas",
"Esta enfermo o tiene una discapacidad",
"No estudia, no trabaja y no busca trabajo"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$actividad, data$ola,
show.col.prc = TRUE,
var.labels = c("Actividad","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de Actividad principal, por ola")
# Filtrar para ocupados
data <- filter(data, actividad %in% c("Trabaja de manera remunerada con jornada completa",
"Trabaja de manera remunerada a tiempo parcial",
"Estudia y trabaja"))
n <- nrow(data)
# Crear variable binaria: full-time
data <- mutate(data,
full_time=if_else(actividad == "Trabaja de manera remunerada con jornada completa",1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$full_time,data$ola,
show.col.prc=TRUE,
var.labels=c("Full-time","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as con jornada completa, por ola")
# Recodficar
data <- data %>%
mutate(rel_empleo=car::recode(m07,
recodes=c("1='Empleado u obrero en empresa privada';
2='Empleado u obrero del sector público';
3='Miembro de las Fuerzas Armadas y de Orden';
4='Patrón/a o empleador/a';
5='Trabaja solo, no tiene empleados';
6='Familiar no remunerado';
7='Servicio doméstico';
-888=NA;
-999=NA"),
as.factor=TRUE, # convertir a factor
levels=c("Empleado u obrero en empresa privada",
"Empleado u obrero del sector público",
"Miembro de las Fuerzas Armadas y de Orden",
"Patrón/a o empleador/a",
"Trabaja solo, no tiene empleados",
"Familiar no remunerado",
"Servicio doméstico"))) # ordenar niveles
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$rel_empleo, data$ola,
show.col.prc = TRUE,
var.labels = c("Relación de empleo","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de la Relación de empleo, por ola")
# Crear una columna con la variable "rel_empleo" adelantada una ola
data <- data %>%
# arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(rel_empleo_lagged=lag(as.character(rel_empleo),n=1)) %>%  # Desplaza "rel_empleo" a la siguiente ola,
# conviertiendo el factor en character temporalmente
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(rel_empleo=ifelse(is.na(rel_empleo),rel_empleo_lagged,as.character(rel_empleo))) %>%  # Si rel empleo es NA, sustituir con el valor de la ola anterior y asegurarse que actividad esté en formato carácter
mutate(rel_empleo=factor(rel_empleo)) %>%  # Convertir de nuevo a factor
select(-rel_empleo_lagged)                 # Elimina la columna temporal
# Tabla de frecuencias y porcentajes
sjt.xtab(data$rel_empleo, data$ola,
show.col.prc = TRUE,
var.labels = c("Relación de empleo","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de la Relación de empleo, por ola")
# Filtrar para trabajadores y self-employed
data <- filter(data, rel_empleo %in% c("Empleado u obrero en empresa privada",
"Empleado u obrero del sector público",
"Trabaja solo, no tiene empleados",
"Familiar no remunerado",
"Servicio doméstico"))
n <- nrow(data)
# Carga bbdd con comparacion 88 y 08
isco08_88 <- read_excel(here::here("input/isco08-88.xls"))
isco08_88 <- isco08_88 %>%
rename(isco08=`ISCO 08 Code`,isco88=`ISCO-88 code`)
# Exploración
valores_repetidos <- table(isco08_88$isco88) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]
valores_repetidos <- table(isco08_88$isco08) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]
# CIUO - ISCO: Recodificación 88->08 4 digitos en datos elsoc
indices <- match(data$ciuo88_m03,isco08_88$isco88)
data$ciuo08_rec <- isco08_88$isco08[indices]
data$ciuo08_rec <- as.numeric(data$ciuo08_rec) # es solo la recodificación de las que eran 88 en data, es decir, año 2016
# Creación variable isco08 con ciuo08_m03 y ciuo08_rec (ex ciuo88_m03) 4 digitos
data$isco08 <- ifelse(!is.na(data$ciuo08_rec),data$ciuo08_rec,data$ciuo08_m03) # es la unión en una variable de todo en 08
# Crear una columna con la variable "isco08" adelantada una ola
data <- data %>%
# arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(isco08_lagged=lag(isco08,n=1)) %>%  # Desplaza "isco08" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(isco08=ifelse(is.na(isco08),isco08_lagged,isco08)) %>%  # Si isco08 es NA, sustituir con el valor de la ola anterior
select(-isco08_lagged)                 # Elimina la columna temporal
# CIUO - ISCO: creación de variables con 1 dígito
data$isco08_1d <- as.character(data$isco08)
data$isco08_1d <- substr(data$isco08_1d,1,1)
data$isco08_1d <- as.numeric(data$isco08_1d)
# CIUO - ISCO: creación de variables con 2 dígitos
data$isco08_2d <- as.character(data$isco08)
data$isco08_2d <- substr(data$isco08_2d,1,2)
data$isco08_2d <- as.numeric(data$isco08_2d)
# Tabla de frecuencias y porcentajes 1 dígito
sjt.xtab(data$isco08_1d, data$ola,
show.col.prc = TRUE,
var.labels = c("CIUO08","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de Ocupación con 1 dígito, por ola")
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$isco08_2d, data$ola,
show.col.prc = TRUE,
var.labels = c("CIUO08","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de Ocupación con 2 dígitos, por ola")
# Creación variable Nivel de cualificación
data <- mutate(data,
cualificacion = case_when(isco08_2d <= 34 & educ >= 9 ~ "Experts",
isco08_2d <= 34 & educ < 9 ~ "Skilled",
isco08_2d == 35 ~ "Skilled",
isco08_2d >= 41 & isco08_2d <= 44 ~ "Skilled",
isco08_2d == 53 ~ "Skilled",
isco08_2d == 51 & educ <= 5 ~ "Unskilled",
isco08_2d == 51 & educ > 5 ~ "Skilled",
isco08_2d == 54 & educ <= 5 ~ "Unskilled",
isco08_2d == 54 & educ > 5 ~ "Skilled",
isco08_2d == 61 & educ <= 5 ~ "Unskilled",
isco08_2d == 61 & educ > 5 ~ "Skilled",
isco08_2d == 62 & educ <= 5 ~ "Unskilled",
isco08_2d == 62 & educ > 5 ~ "Skilled",
isco08_2d == 71 & educ <= 5 ~ "Unskilled",
isco08_2d == 71 & educ > 5 ~ "Skilled",
isco08_2d == 72 & educ <= 5 ~ "Unskilled",
isco08_2d == 72 & educ > 5 ~ "Skilled",
isco08_2d == 73 & educ <= 5 ~ "Unskilled",
isco08_2d == 73 & educ > 5 ~ "Skilled",
isco08_2d == 74 & educ <= 5 ~ "Unskilled",
isco08_2d == 74 & educ > 5 ~ "Skilled",
isco08_2d == 75 & educ <= 5 ~ "Unskilled",
isco08_2d == 75 & educ > 5 ~ "Skilled",
isco08_2d == 81 & educ <= 5 ~ "Unskilled",
isco08_2d == 81 & educ > 5 ~ "Skilled",
isco08_2d == 52 ~ "Unskilled",
isco08_2d == 61 ~ "Unskilled",
isco08_2d == 63 ~ "Unskilled",
isco08_2d == 75 ~ "Unskilled",
isco08_2d == 82 ~ "Unskilled",
isco08_2d == 83 ~ "Unskilled",
isco08_2d == 90 ~ "Unskilled"))
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$cualificacion, data$ola,
show.col.prc = TRUE,
var.labels = c("Nivel de cualificación","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes del Nivel de Cualificación, por ola")
data$m04
data$ciiu3_m04
select(data$idencuesta,data$ola,data$ciiu3_m04)
select(data,idencuesta,ola,ciiu3_m04)
print(n = ...)
print(n = 4000)
print(select(data,idencuesta,ola,ciiu3_m04))
print(select(data,idencuesta,ola,ciiu3_m04),n=4000)
print(select(data,idencuesta,ola,ciiu3_m04),n=2000)
print(select(data,idencuesta,ola,ciiu4_m04),n=2000)
print(select(data,idencuesta,ola,ciiu4_m04),n=4000)
print(select(data,idencuesta,ola,ciiu4_m04),n=6000)
print(select(data,idencuesta,ola,ciiu4_m04),n=8000)
# Recodificar variable CIIU 3 para que queden de 4 dígitos
data$ciiu3 <- sprintf("%04d",data$ciiu3_m04)
# Recodificar variable CIIU 4 para que queden de 4 dígitos
data$ciiu4 <- sprintf("%04d",data$ciiu4_m04)
# Creación de variable CIIU 4 con CIIU 3
## Carga bbdd con comparacion 31 y 4
isic4_isic31 <- read_csv(here::here("input/ISIC4_ISIC31.txt"))
## Recodificación CIIU 3 -> CIIU 4
indices <- match(data$ciiu3,isic4_isic31$ISIC31code)
data$ciiu4_rec <- isic4_isic31$ISIC4code[indices]
# Creación variable isic4 con ciiu4 y ciiu4_rec (ex ciiu3) 4 digitos
data$isic4 <- ifelse(!is.na(data$ciiu4_rec),data$ciiu4_rec,data$ciiu4) # es la unión en una variable de todo en ciiu4
print(select(data,idencuesta,ola,isic4),n=1000)
print(select(data,idencuesta,ola,isic4),n=2000)
print(select(data,idencuesta,ola,isic4),n=4000)
print(select(data,idencuesta,ola,isic4),n=6000)
print(select(data,idencuesta,ola,isic4),n=8000)
class(data$isic4)
# Crear una columna con la variable "isic4" adelantada una ola
data <- data %>%
# arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(isic4_lagged=lag(isic4,n=1)) %>%  # Desplaza "isic4" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(isic4=ifelse(is.na(isic4),isic4_lagged,isic4)) %>%  # Si isic4 es NA, sustituir con el valor de la ola anterior
select(-isic4_lagged)                 # Elimina la columna temporal
class(data$isic4)
# CIIU 4: creación de variable con 2 dígitos
data$isic4_2d <- substr(data$isic4,1,2)
data$isic4_2d <- as.numeric(data$isic4_2d)
# Creación de variable con letra
data <- mutate(data,
rama = case_when(isic4_2d <= 03 ~ "A",
isic4_2d >= 05 & isic4_2d <= 09 ~ "B",
isic4_2d >= 10 & isic4_2d <= 33 ~ "C",
isic4_2d == 35 ~ "D",
isic4_2d >= 36 & isic4_2d <= 39 ~ "E",
isic4_2d >= 41 & isic4_2d <= 43 ~ "F",
isic4_2d >= 45 & isic4_2d <= 47 ~ "G",
isic4_2d >= 49 & isic4_2d <= 53 ~ "H",
isic4_2d >= 55 & isic4_2d <= 56 ~ "I",
isic4_2d >= 58 & isic4_2d <= 63 ~ "J",
isic4_2d >= 64 & isic4_2d <= 66 ~ "K",
isic4_2d == 68 ~ "L",
isic4_2d >= 69 & isic4_2d <= 75 ~ "M",
isic4_2d >= 77 & isic4_2d <= 82 ~ "N",
isic4_2d == 84 ~ "O",
isic4_2d == 85 ~ "P",
isic4_2d >= 86 & isic4_2d <= 88 ~ "Q",
isic4_2d >= 90 & isic4_2d <= 93 ~ "R",
isic4_2d >= 94 & isic4_2d <= 96 ~ "S",
isic4_2d >= 97 & isic4_2d <= 98 ~ "T",
isic4_2d == 99 ~ "U"))
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$rama, data$ola,
show.col.prc = TRUE,
var.labels = c("Rama de Actividad Económica","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de la Rama de Actividad Económica, por ola")
data$isic4
select(data,idencuesta, ola)
print(select(data,idencuesta,ola,isic4),n=1000)
print(select(data,idencuesta,ola,isic4),n=2000)
# Crear una columna con la variable "isic4" adelantada una ola
data <- data %>%
# arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(isic4_lagged=lag(isic4,n=1)) %>%  # Desplaza "isic4" a la siguiente ola
ungroup()
View(data)
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(isic4=ifelse(!is.na(isic4),isic4,isic4_lagged)) %>%  # Si isic4 es NA, sustituir con el valor de la ola anterior
select(-isic4_lagged)                 # Elimina la columna temporal
# CIIU 4: creación de variable con 2 dígitos
data$isic4_2d <- substr(data$isic4,1,2)
data$isic4_2d <- as.numeric(data$isic4_2d)
# Creación de variable con letra
data <- mutate(data,
rama = case_when(isic4_2d <= 03 ~ "A",
isic4_2d >= 05 & isic4_2d <= 09 ~ "B",
isic4_2d >= 10 & isic4_2d <= 33 ~ "C",
isic4_2d == 35 ~ "D",
isic4_2d >= 36 & isic4_2d <= 39 ~ "E",
isic4_2d >= 41 & isic4_2d <= 43 ~ "F",
isic4_2d >= 45 & isic4_2d <= 47 ~ "G",
isic4_2d >= 49 & isic4_2d <= 53 ~ "H",
isic4_2d >= 55 & isic4_2d <= 56 ~ "I",
isic4_2d >= 58 & isic4_2d <= 63 ~ "J",
isic4_2d >= 64 & isic4_2d <= 66 ~ "K",
isic4_2d == 68 ~ "L",
isic4_2d >= 69 & isic4_2d <= 75 ~ "M",
isic4_2d >= 77 & isic4_2d <= 82 ~ "N",
isic4_2d == 84 ~ "O",
isic4_2d == 85 ~ "P",
isic4_2d >= 86 & isic4_2d <= 88 ~ "Q",
isic4_2d >= 90 & isic4_2d <= 93 ~ "R",
isic4_2d >= 94 & isic4_2d <= 96 ~ "S",
isic4_2d >= 97 & isic4_2d <= 98 ~ "T",
isic4_2d == 99 ~ "U"))
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$rama, data$ola,
show.col.prc = TRUE,
var.labels = c("Rama de Actividad Económica","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de la Rama de Actividad Económica, por ola")
